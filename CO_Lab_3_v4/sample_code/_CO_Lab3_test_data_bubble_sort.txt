// $0 ($0): Constant 0
// $v0-$v1 ($2-$3): Return value registers
// $a0-$a3 ($4-$7): Function call arguement registers
// $t0-$t9 ($8-$15, $24, $25): Temporary register
// $s0-$s7 ($16-$23): Registers that need to be saved
// $sp ($29): Stack pointer
// $ra ($31): Store return address

    //addu $t0, $0, $0
    00000000000000000100000000100001
    //addi $t1, $0, 10
    00100000000010010000000000001010
    //addi $t2, $0, 13
    00100000000010100000000000001101
    //mul  $t3, $t1, $t1
    00000001001010010101100000011000
    //j Jump
    00001000000000000000000000011001
/*bubble:(5)*/
    //addi $t0, $0, 10
    00100000000010000000000000001010
    //addi $t1, $0, 4
    00100000000010010000000000000100
    //mul  $t4, $t0, $t1
    00000001000010010110000000011000
/*outer:(8)*/
    //addi $t6, $0, 8
    00100000000011100000000000001000
    //subu $t0, $t4, $t6
    00000001100011100100000000100011
    //addi $t1, $0, 0
    00100000000010010000000000000000
/*inner:(11)*/
    //lw   $t2, 4($t0)
    10001101000010100000000000000100
    //lw   $t3, 0($t0)
    10001101000010110000000000000000
    //subu $at, $t3, $t2
    00000001011010100000100000100011
    //bgtz $at, no_swap
    00011100001000000000000000000011
    //sw   $t2, 0($t0)
    10101101000010100000000000000000
    //sw   $t3, 4($t0)
    10101101000010110000000000000100
    //addi $t1, $0, 1
    00100000000010010000000000000001
/*no_swap:(18)*/
    //addi $t5, $0, 4
    00100000000011010000000000000100
    //subu $t0, $t0, $t5
    00000001000011010100000000100011
    //slt  $at, $t0, $0
    00000001000000000000100000101010
    //bgtz $at, next_turn
    00011100001000000000000000000001
    //j    inner
    00001000000000000000000000001011
/*next_turn:(23)*/
    //bne  $t1, $0, outer
    00010101001000001111111111110000
    //j    End
    00001000000000000000000000011101
/*Jump:(25)*/
    //subu $t2, $t2, $t1
    00000001010010010101000000100011
/*Loop:(26)*/
    //addu $t4, $t3, $t2
    00000001011010100110000000100001
    //beq  $t1, $t2, Loop
    00010001001010101111111111111110
    //j    bubble
    00001000000000000000000000000101
/*End:(29)*/
    00000000000000000000000000000000

//0x0  =        10 | 0x4  =         9 | 0x8  =         8 | 0xc  =         7
//0x10 =         6 | 0x14 =         5 | 0x18 =         4 | 0x1c =         3
//0x20 =         2 | 0x24 =         1 | 0x28 =         0 | 0x2c =         0
